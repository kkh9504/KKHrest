package com.rest.controller;

import java.io.IOException;

//--------------암호화
import org.apache.tomcat.util.codec.binary.Base64;

import java.security.*;
import javax.crypto.*;
import javax.crypto.spec.*;
//--------------암호화 end

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.rest.DAO.UserDAO;

/**
 * Servlet implementation class signUp
 */
@WebServlet("/signUp")
public class signUp extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public signUp() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		UserDAO dao = new UserDAO();
		String nickname = request.getParameter("nickname");
		String password = request.getParameter("password");
		String email = request.getParameter("email");
		email += "@openhands.co.kr";
		
		//-----------암호화
			try {
			// 256bit = 32byte  ----------AES
			String strPassWord = "12345678901234567890123456789012";
			String strIv = "1234567890123456";
			
			SecretKey clsKey = new SecretKeySpec( strPassWord.getBytes(), "AES" );
			IvParameterSpec clsIV = new IvParameterSpec( strIv.getBytes() );
			
			Cipher clsCipher = Cipher.getInstance( "AES/CBC/PKCS5Padding" );
			//AES end
			
			String base_Enc = encrypt(password);	//base64 암호화
//			password = null;	//password 클리어
			System.out.println("base64 암호화결과: " + base_Enc);

			clsCipher.init( Cipher.ENCRYPT_MODE, clsKey, clsIV );
			byte [] aes_Enc = clsCipher.doFinal( base_Enc.getBytes("utf-8") );	//AES256 암호화

			System.out.println("AES256 암호화 결과: " + new String(aes_Enc, "utf8"));
			password = new String(aes_Enc, "utf8");
/*
			clsCipher.init( Cipher.DECRYPT_MODE, clsKey, clsIV );
			byte[] aes_Dec = clsCipher.doFinal( aes_Enc );	//AES256 복호화
			
			String aes_Dec_Utf8 = new String(aes_Dec, "utf8");	//utf8변환
			System.out.println("AES256 복호화 결과: " + aes_Dec_Utf8);
			
			String base_Dec = decrypt(aes_Dec_Utf8);	//base64 복호화
			System.out.println("최종 복호화결과: " + base_Dec);
*/			} catch(NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | InvalidAlgorithmParameterException | IllegalBlockSizeException | BadPaddingException
 e)
			{
				e.printStackTrace();
			}
		//-----------암호화
		response.getWriter().write(dao.signUp(nickname, password, email) + "");
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}
	
	//-----------암호화
	public static String encrypt(String in)
	{
		return new String(Base64.encodeBase64(in.getBytes()));
	}
	public static String decrypt(String in) throws IOException
	{
		return new String(Base64.decodeBase64(in.getBytes())); 
	}
	//-----------암호화 end
	
}
